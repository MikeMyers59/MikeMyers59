(function(root){var OldConsole={};if(typeof console!=="object"){return}function generateNewMethod(method){return function(){OldConsole[method].apply(console,arguments);if(["debug","log","info","warn","error","dir"].indexOf(method)===-1){return}for(var i=0;i<_consoleJS._els.length;++i){var cEl=_consoleJS._els[i],htmlToSet="",lineSeparator="<br />";if(cEl.tagName==="PRE"){lineSeparator="\n"}var nSpan=document.createElement("span");nSpan.className+=method;for(var i=0;i<arguments.length;++i){htmlToSet+=JSON.stringify(arguments[i],null,method==="dir"?4:undefined)+" "}htmlToSet+=lineSeparator;if(nSpan.innerText){nSpan.innerText=htmlToSet}else{nSpan.textContent=htmlToSet}cEl.appendChild(nSpan)}}}function overrideMethod(method){OldConsole[method]=console[method];console[method]=generateNewMethod(method)}function ConsoleJS(){this._els=[];this._history=[];this._current=-1}ConsoleJS.prototype.init=function(options){var self=this;for(var method in console){overrideMethod(method)}options=options||{};if(typeof options!=="object"){options={selector:options}}if(!options.selector){throw new Error("options.selector is required")}if(typeof options.selector==="string"){self._els=document.querySelectorAll(options.selector)}if(options.input){if(typeof options.input==="string"){options.input=document.querySelector(options.input)}options.input.focus();options.input.addEventListener("keydown",function(e){if(e.keyCode===38&&e.ctrlKey){this.value=self.history.back().command;return}if(e.keyCode===40&&e.ctrlKey){this.value=_consoleJS.history.next().command;return}if(e.keyCode!==13||e.shiftKey){return}self._history.push({command:this.value,date:new Date});self._current=self._history.length;try{console.log(eval(this.value))}catch(e){console.error(e.message)}this.value="";e.preventDefault()})}};ConsoleJS.prototype.history={};ConsoleJS.prototype.history.back=function(){var res=_consoleJS._history[--_consoleJS._current];if(res===undefined){++_consoleJS._current;res={command:""}}return res};ConsoleJS.prototype.history.next=function(){var res=_consoleJS._history[++_consoleJS._current];if(res===undefined){--_consoleJS._current;res={command:""}}return res};var _consoleJS=new ConsoleJS;window.ConsoleJS=_consoleJS})(this);